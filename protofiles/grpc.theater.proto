syntax = "proto3";
package proto;

import "grpc.base.proto";
import "grpc.user.proto";
import "google/protobuf/timestamp.proto";

enum PRIVACY {
    PRIVATE  = 0;
    EVERYONE = 1;
    PUBLIC   = 2;
}

message Subtitle {
    string  id          = 1;
    string  theater_id  = 2;
    string  lang        = 3;
    string  file        = 4;
    google.protobuf.Timestamp  created_at  = 5;
    google.protobuf.Timestamp  updated_at  = 6;
}

enum MovieType {
    UNKNOWN    = 0;
    YOUTUBE    = 1;
    URI        = 2;
    PIRATE_BAY = 3;
    LOCAL_PATH = 4;
}

message Movie {
    MovieType   type      = 1;
    string      uri       = 2;
    string      poster    = 3;
    int64       size      = 4;
    int64       length    = 5;
    int64       last_played_time   = 6;
    repeated    Subtitle subtitles = 7;
}

message Theater {
    string id                   = 1;
    string title                = 2;
    string hash                 = 3;
    PRIVACY privacy             = 4;
    PRIVACY video_player_access = 5;
    string user_id              = 6;
    User user                   = 7;
    Movie movie                 = 8;
    google.protobuf.Timestamp created_at  = 9;
    google.protobuf.Timestamp updated_at  = 10;
}

message GetAllUserTheatersRequest {
    AuthenticateRequest auth_request = 1;
}

message CreateTheaterRequest {
    Theater theater = 1;
    AuthenticateRequest auth_request = 3;
}

message TheaterAuthRequest {
    Theater theater = 1;
    AuthenticateRequest auth_request = 2;
}

message RemoveSubtitleRequest {
    AuthenticateRequest auth_request = 1;
    Subtitle subtitle = 2;
    bytes file = 3;
}

message UserTheatersResponse {
    int64    code    = 1;
    string   status  = 2;
    string   message = 3;
    repeated Theater result = 4;
}

message TheaterSubtitlesResponse {
    int64    code    = 1;
    string   status  = 2;
    string   message = 3;
    repeated Subtitle result = 4;
}

message UserTheaterResponse {
    int64    code    = 1;
    string   status  = 2;
    string   message = 3;
    Theater result = 4;
}

message InviteFriendsTheaterRequest {
    AuthenticateRequest auth_request = 1;
    string theater_id = 2;
    repeated string friend_ids = 3;
}

service TheaterService {
    rpc Invite(InviteFriendsTheaterRequest) returns (Response);
    rpc GetUserTheaters(GetAllUserTheatersRequest) returns (UserTheatersResponse);
    rpc GetUserSharedTheaters(GetAllUserTheatersRequest) returns (UserTheatersResponse);
    rpc GetTheater(Theater) returns (UserTheaterResponse);
    rpc CreateTheater(CreateTheaterRequest) returns (Response);
    rpc RemoveTheater(TheaterAuthRequest) returns (Response);
    rpc EditTheater(TheaterAuthRequest) returns (Response);
    rpc GetSubtitles(TheaterAuthRequest) returns (TheaterSubtitlesResponse);
    rpc RemoveSubtitle(RemoveSubtitleRequest) returns (Response);
}