// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: grpc.theater.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PRIVACY int32

const (
	PRIVACY_PRIVATE  PRIVACY = 0
	PRIVACY_EVERYONE PRIVACY = 1
	PRIVACY_PUBLIC   PRIVACY = 2
)

// Enum value maps for PRIVACY.
var (
	PRIVACY_name = map[int32]string{
		0: "PRIVATE",
		1: "EVERYONE",
		2: "PUBLIC",
	}
	PRIVACY_value = map[string]int32{
		"PRIVATE":  0,
		"EVERYONE": 1,
		"PUBLIC":   2,
	}
)

func (x PRIVACY) Enum() *PRIVACY {
	p := new(PRIVACY)
	*p = x
	return p
}

func (x PRIVACY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PRIVACY) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_theater_proto_enumTypes[0].Descriptor()
}

func (PRIVACY) Type() protoreflect.EnumType {
	return &file_grpc_theater_proto_enumTypes[0]
}

func (x PRIVACY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PRIVACY.Descriptor instead.
func (PRIVACY) EnumDescriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{0}
}

type MovieType int32

const (
	MovieType_UNKNOWN    MovieType = 0
	MovieType_YOUTUBE    MovieType = 1
	MovieType_URI        MovieType = 2
	MovieType_PIRATE_BAY MovieType = 3
	MovieType_LOCAL_PATH MovieType = 4
)

// Enum value maps for MovieType.
var (
	MovieType_name = map[int32]string{
		0: "UNKNOWN",
		1: "YOUTUBE",
		2: "URI",
		3: "PIRATE_BAY",
		4: "LOCAL_PATH",
	}
	MovieType_value = map[string]int32{
		"UNKNOWN":    0,
		"YOUTUBE":    1,
		"URI":        2,
		"PIRATE_BAY": 3,
		"LOCAL_PATH": 4,
	}
)

func (x MovieType) Enum() *MovieType {
	p := new(MovieType)
	*p = x
	return p
}

func (x MovieType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MovieType) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_theater_proto_enumTypes[1].Descriptor()
}

func (MovieType) Type() protoreflect.EnumType {
	return &file_grpc_theater_proto_enumTypes[1]
}

func (x MovieType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MovieType.Descriptor instead.
func (MovieType) EnumDescriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{1}
}

type Subtitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TheaterId string               `protobuf:"bytes,2,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
	Lang      string               `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	File      string               `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Subtitle) Reset() {
	*x = Subtitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subtitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subtitle) ProtoMessage() {}

func (x *Subtitle) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subtitle.ProtoReflect.Descriptor instead.
func (*Subtitle) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{0}
}

func (x *Subtitle) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Subtitle) GetTheaterId() string {
	if x != nil {
		return x.TheaterId
	}
	return ""
}

func (x *Subtitle) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Subtitle) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *Subtitle) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Subtitle) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Movie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           MovieType   `protobuf:"varint,1,opt,name=type,proto3,enum=proto.MovieType" json:"type,omitempty"`
	Uri            string      `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Poster         string      `protobuf:"bytes,3,opt,name=poster,proto3" json:"poster,omitempty"`
	Size           int64       `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Length         int64       `protobuf:"varint,5,opt,name=length,proto3" json:"length,omitempty"`
	LastPlayedTime int64       `protobuf:"varint,6,opt,name=last_played_time,json=lastPlayedTime,proto3" json:"last_played_time,omitempty"`
	Subtitles      []*Subtitle `protobuf:"bytes,7,rep,name=subtitles,proto3" json:"subtitles,omitempty"`
}

func (x *Movie) Reset() {
	*x = Movie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Movie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Movie) ProtoMessage() {}

func (x *Movie) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Movie.ProtoReflect.Descriptor instead.
func (*Movie) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{1}
}

func (x *Movie) GetType() MovieType {
	if x != nil {
		return x.Type
	}
	return MovieType_UNKNOWN
}

func (x *Movie) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Movie) GetPoster() string {
	if x != nil {
		return x.Poster
	}
	return ""
}

func (x *Movie) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Movie) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Movie) GetLastPlayedTime() int64 {
	if x != nil {
		return x.LastPlayedTime
	}
	return 0
}

func (x *Movie) GetSubtitles() []*Subtitle {
	if x != nil {
		return x.Subtitles
	}
	return nil
}

type Theater struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title             string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Hash              string               `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Privacy           PRIVACY              `protobuf:"varint,4,opt,name=privacy,proto3,enum=proto.PRIVACY" json:"privacy,omitempty"`
	VideoPlayerAccess PRIVACY              `protobuf:"varint,5,opt,name=video_player_access,json=videoPlayerAccess,proto3,enum=proto.PRIVACY" json:"video_player_access,omitempty"`
	UserId            string               `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	User              *User                `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`
	Movie             *Movie               `protobuf:"bytes,8,opt,name=movie,proto3" json:"movie,omitempty"`
	CreatedAt         *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamp.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Theater) Reset() {
	*x = Theater{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Theater) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Theater) ProtoMessage() {}

func (x *Theater) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Theater.ProtoReflect.Descriptor instead.
func (*Theater) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{2}
}

func (x *Theater) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Theater) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Theater) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Theater) GetPrivacy() PRIVACY {
	if x != nil {
		return x.Privacy
	}
	return PRIVACY_PRIVATE
}

func (x *Theater) GetVideoPlayerAccess() PRIVACY {
	if x != nil {
		return x.VideoPlayerAccess
	}
	return PRIVACY_PRIVATE
}

func (x *Theater) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Theater) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Theater) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

func (x *Theater) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Theater) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetAllUserTheatersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthRequest *AuthenticateRequest `protobuf:"bytes,1,opt,name=auth_request,json=authRequest,proto3" json:"auth_request,omitempty"`
}

func (x *GetAllUserTheatersRequest) Reset() {
	*x = GetAllUserTheatersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllUserTheatersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUserTheatersRequest) ProtoMessage() {}

func (x *GetAllUserTheatersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUserTheatersRequest.ProtoReflect.Descriptor instead.
func (*GetAllUserTheatersRequest) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllUserTheatersRequest) GetAuthRequest() *AuthenticateRequest {
	if x != nil {
		return x.AuthRequest
	}
	return nil
}

type CreateTheaterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theater     *Theater             `protobuf:"bytes,1,opt,name=theater,proto3" json:"theater,omitempty"`
	AuthRequest *AuthenticateRequest `protobuf:"bytes,3,opt,name=auth_request,json=authRequest,proto3" json:"auth_request,omitempty"`
}

func (x *CreateTheaterRequest) Reset() {
	*x = CreateTheaterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTheaterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTheaterRequest) ProtoMessage() {}

func (x *CreateTheaterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTheaterRequest.ProtoReflect.Descriptor instead.
func (*CreateTheaterRequest) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTheaterRequest) GetTheater() *Theater {
	if x != nil {
		return x.Theater
	}
	return nil
}

func (x *CreateTheaterRequest) GetAuthRequest() *AuthenticateRequest {
	if x != nil {
		return x.AuthRequest
	}
	return nil
}

type TheaterAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theater     *Theater             `protobuf:"bytes,1,opt,name=theater,proto3" json:"theater,omitempty"`
	AuthRequest *AuthenticateRequest `protobuf:"bytes,2,opt,name=auth_request,json=authRequest,proto3" json:"auth_request,omitempty"`
}

func (x *TheaterAuthRequest) Reset() {
	*x = TheaterAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TheaterAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TheaterAuthRequest) ProtoMessage() {}

func (x *TheaterAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TheaterAuthRequest.ProtoReflect.Descriptor instead.
func (*TheaterAuthRequest) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{5}
}

func (x *TheaterAuthRequest) GetTheater() *Theater {
	if x != nil {
		return x.Theater
	}
	return nil
}

func (x *TheaterAuthRequest) GetAuthRequest() *AuthenticateRequest {
	if x != nil {
		return x.AuthRequest
	}
	return nil
}

type RemoveSubtitleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthRequest *AuthenticateRequest `protobuf:"bytes,1,opt,name=auth_request,json=authRequest,proto3" json:"auth_request,omitempty"`
	Subtitle    *Subtitle            `protobuf:"bytes,2,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	File        []byte               `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *RemoveSubtitleRequest) Reset() {
	*x = RemoveSubtitleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSubtitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSubtitleRequest) ProtoMessage() {}

func (x *RemoveSubtitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSubtitleRequest.ProtoReflect.Descriptor instead.
func (*RemoveSubtitleRequest) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveSubtitleRequest) GetAuthRequest() *AuthenticateRequest {
	if x != nil {
		return x.AuthRequest
	}
	return nil
}

func (x *RemoveSubtitleRequest) GetSubtitle() *Subtitle {
	if x != nil {
		return x.Subtitle
	}
	return nil
}

func (x *RemoveSubtitleRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type UserTheatersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Status  string     `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Result  []*Theater `protobuf:"bytes,4,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *UserTheatersResponse) Reset() {
	*x = UserTheatersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTheatersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTheatersResponse) ProtoMessage() {}

func (x *UserTheatersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTheatersResponse.ProtoReflect.Descriptor instead.
func (*UserTheatersResponse) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{7}
}

func (x *UserTheatersResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserTheatersResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserTheatersResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserTheatersResponse) GetResult() []*Theater {
	if x != nil {
		return x.Result
	}
	return nil
}

type TheaterSubtitlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Status  string      `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Result  []*Subtitle `protobuf:"bytes,4,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *TheaterSubtitlesResponse) Reset() {
	*x = TheaterSubtitlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TheaterSubtitlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TheaterSubtitlesResponse) ProtoMessage() {}

func (x *TheaterSubtitlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TheaterSubtitlesResponse.ProtoReflect.Descriptor instead.
func (*TheaterSubtitlesResponse) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{8}
}

func (x *TheaterSubtitlesResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TheaterSubtitlesResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TheaterSubtitlesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TheaterSubtitlesResponse) GetResult() []*Subtitle {
	if x != nil {
		return x.Result
	}
	return nil
}

type UserTheaterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Status  string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Result  *Theater `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UserTheaterResponse) Reset() {
	*x = UserTheaterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTheaterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTheaterResponse) ProtoMessage() {}

func (x *UserTheaterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTheaterResponse.ProtoReflect.Descriptor instead.
func (*UserTheaterResponse) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{9}
}

func (x *UserTheaterResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserTheaterResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserTheaterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserTheaterResponse) GetResult() *Theater {
	if x != nil {
		return x.Result
	}
	return nil
}

type InviteFriendsTheaterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthRequest *AuthenticateRequest `protobuf:"bytes,1,opt,name=auth_request,json=authRequest,proto3" json:"auth_request,omitempty"`
	TheaterId   string               `protobuf:"bytes,2,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
	FriendIds   []string             `protobuf:"bytes,3,rep,name=friend_ids,json=friendIds,proto3" json:"friend_ids,omitempty"`
}

func (x *InviteFriendsTheaterRequest) Reset() {
	*x = InviteFriendsTheaterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteFriendsTheaterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteFriendsTheaterRequest) ProtoMessage() {}

func (x *InviteFriendsTheaterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteFriendsTheaterRequest.ProtoReflect.Descriptor instead.
func (*InviteFriendsTheaterRequest) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{10}
}

func (x *InviteFriendsTheaterRequest) GetAuthRequest() *AuthenticateRequest {
	if x != nil {
		return x.AuthRequest
	}
	return nil
}

func (x *InviteFriendsTheaterRequest) GetTheaterId() string {
	if x != nil {
		return x.TheaterId
	}
	return ""
}

func (x *InviteFriendsTheaterRequest) GetFriendIds() []string {
	if x != nil {
		return x.FriendIds
	}
	return nil
}

var File_grpc_theater_proto protoreflect.FileDescriptor

var file_grpc_theater_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7,
	0x01, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x05, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x28,
	0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x09, 0x73, 0x75,
	0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x22, 0x81, 0x03, 0x0a, 0x07, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a,
	0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x52, 0x49, 0x56, 0x41, 0x43, 0x59, 0x52, 0x07,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x3e, 0x0a, 0x13, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x52, 0x49,
	0x56, 0x41, 0x43, 0x59, 0x52, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x05,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5a, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7f, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x07, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x61, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7d, 0x0a, 0x12, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x07, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2b, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x18, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x1b, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x61, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x2a, 0x30, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41,
	0x43, 0x59, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x45, 0x56, 0x45, 0x52, 0x59, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x02, 0x2a, 0x4e, 0x0a, 0x09, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x59, 0x4f, 0x55, 0x54, 0x55, 0x42, 0x45, 0x10, 0x01,
	0x12, 0x07, 0x0a, 0x03, 0x55, 0x52, 0x49, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x49, 0x52,
	0x41, 0x54, 0x45, 0x5f, 0x42, 0x41, 0x59, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x4f, 0x43,
	0x41, 0x4c, 0x5f, 0x50, 0x41, 0x54, 0x48, 0x10, 0x04, 0x32, 0xf7, 0x04, 0x0a, 0x0e, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x06,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x12,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x45,
	0x64, 0x69, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_theater_proto_rawDescOnce sync.Once
	file_grpc_theater_proto_rawDescData = file_grpc_theater_proto_rawDesc
)

func file_grpc_theater_proto_rawDescGZIP() []byte {
	file_grpc_theater_proto_rawDescOnce.Do(func() {
		file_grpc_theater_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_theater_proto_rawDescData)
	})
	return file_grpc_theater_proto_rawDescData
}

var file_grpc_theater_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_grpc_theater_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_grpc_theater_proto_goTypes = []interface{}{
	(PRIVACY)(0),                        // 0: proto.PRIVACY
	(MovieType)(0),                      // 1: proto.MovieType
	(*Subtitle)(nil),                    // 2: proto.Subtitle
	(*Movie)(nil),                       // 3: proto.Movie
	(*Theater)(nil),                     // 4: proto.Theater
	(*GetAllUserTheatersRequest)(nil),   // 5: proto.GetAllUserTheatersRequest
	(*CreateTheaterRequest)(nil),        // 6: proto.CreateTheaterRequest
	(*TheaterAuthRequest)(nil),          // 7: proto.TheaterAuthRequest
	(*RemoveSubtitleRequest)(nil),       // 8: proto.RemoveSubtitleRequest
	(*UserTheatersResponse)(nil),        // 9: proto.UserTheatersResponse
	(*TheaterSubtitlesResponse)(nil),    // 10: proto.TheaterSubtitlesResponse
	(*UserTheaterResponse)(nil),         // 11: proto.UserTheaterResponse
	(*InviteFriendsTheaterRequest)(nil), // 12: proto.InviteFriendsTheaterRequest
	(*timestamp.Timestamp)(nil),         // 13: google.protobuf.Timestamp
	(*User)(nil),                        // 14: proto.User
	(*AuthenticateRequest)(nil),         // 15: proto.AuthenticateRequest
	(*Response)(nil),                    // 16: proto.Response
}
var file_grpc_theater_proto_depIdxs = []int32{
	13, // 0: proto.Subtitle.created_at:type_name -> google.protobuf.Timestamp
	13, // 1: proto.Subtitle.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 2: proto.Movie.type:type_name -> proto.MovieType
	2,  // 3: proto.Movie.subtitles:type_name -> proto.Subtitle
	0,  // 4: proto.Theater.privacy:type_name -> proto.PRIVACY
	0,  // 5: proto.Theater.video_player_access:type_name -> proto.PRIVACY
	14, // 6: proto.Theater.user:type_name -> proto.User
	3,  // 7: proto.Theater.movie:type_name -> proto.Movie
	13, // 8: proto.Theater.created_at:type_name -> google.protobuf.Timestamp
	13, // 9: proto.Theater.updated_at:type_name -> google.protobuf.Timestamp
	15, // 10: proto.GetAllUserTheatersRequest.auth_request:type_name -> proto.AuthenticateRequest
	4,  // 11: proto.CreateTheaterRequest.theater:type_name -> proto.Theater
	15, // 12: proto.CreateTheaterRequest.auth_request:type_name -> proto.AuthenticateRequest
	4,  // 13: proto.TheaterAuthRequest.theater:type_name -> proto.Theater
	15, // 14: proto.TheaterAuthRequest.auth_request:type_name -> proto.AuthenticateRequest
	15, // 15: proto.RemoveSubtitleRequest.auth_request:type_name -> proto.AuthenticateRequest
	2,  // 16: proto.RemoveSubtitleRequest.subtitle:type_name -> proto.Subtitle
	4,  // 17: proto.UserTheatersResponse.result:type_name -> proto.Theater
	2,  // 18: proto.TheaterSubtitlesResponse.result:type_name -> proto.Subtitle
	4,  // 19: proto.UserTheaterResponse.result:type_name -> proto.Theater
	15, // 20: proto.InviteFriendsTheaterRequest.auth_request:type_name -> proto.AuthenticateRequest
	12, // 21: proto.TheaterService.Invite:input_type -> proto.InviteFriendsTheaterRequest
	5,  // 22: proto.TheaterService.GetUserTheaters:input_type -> proto.GetAllUserTheatersRequest
	5,  // 23: proto.TheaterService.GetUserSharedTheaters:input_type -> proto.GetAllUserTheatersRequest
	4,  // 24: proto.TheaterService.GetTheater:input_type -> proto.Theater
	6,  // 25: proto.TheaterService.CreateTheater:input_type -> proto.CreateTheaterRequest
	7,  // 26: proto.TheaterService.RemoveTheater:input_type -> proto.TheaterAuthRequest
	7,  // 27: proto.TheaterService.EditTheater:input_type -> proto.TheaterAuthRequest
	7,  // 28: proto.TheaterService.GetSubtitles:input_type -> proto.TheaterAuthRequest
	8,  // 29: proto.TheaterService.RemoveSubtitle:input_type -> proto.RemoveSubtitleRequest
	16, // 30: proto.TheaterService.Invite:output_type -> proto.Response
	9,  // 31: proto.TheaterService.GetUserTheaters:output_type -> proto.UserTheatersResponse
	9,  // 32: proto.TheaterService.GetUserSharedTheaters:output_type -> proto.UserTheatersResponse
	11, // 33: proto.TheaterService.GetTheater:output_type -> proto.UserTheaterResponse
	16, // 34: proto.TheaterService.CreateTheater:output_type -> proto.Response
	16, // 35: proto.TheaterService.RemoveTheater:output_type -> proto.Response
	16, // 36: proto.TheaterService.EditTheater:output_type -> proto.Response
	10, // 37: proto.TheaterService.GetSubtitles:output_type -> proto.TheaterSubtitlesResponse
	16, // 38: proto.TheaterService.RemoveSubtitle:output_type -> proto.Response
	30, // [30:39] is the sub-list for method output_type
	21, // [21:30] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_grpc_theater_proto_init() }
func file_grpc_theater_proto_init() {
	if File_grpc_theater_proto != nil {
		return
	}
	file_grpc_base_proto_init()
	file_grpc_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_grpc_theater_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subtitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Movie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Theater); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllUserTheatersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTheaterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TheaterAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSubtitleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTheatersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TheaterSubtitlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTheaterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteFriendsTheaterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_theater_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_theater_proto_goTypes,
		DependencyIndexes: file_grpc_theater_proto_depIdxs,
		EnumInfos:         file_grpc_theater_proto_enumTypes,
		MessageInfos:      file_grpc_theater_proto_msgTypes,
	}.Build()
	File_grpc_theater_proto = out.File
	file_grpc_theater_proto_rawDesc = nil
	file_grpc_theater_proto_goTypes = nil
	file_grpc_theater_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TheaterServiceClient is the client API for TheaterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TheaterServiceClient interface {
	Invite(ctx context.Context, in *InviteFriendsTheaterRequest, opts ...grpc.CallOption) (*Response, error)
	GetUserTheaters(ctx context.Context, in *GetAllUserTheatersRequest, opts ...grpc.CallOption) (*UserTheatersResponse, error)
	GetUserSharedTheaters(ctx context.Context, in *GetAllUserTheatersRequest, opts ...grpc.CallOption) (*UserTheatersResponse, error)
	GetTheater(ctx context.Context, in *Theater, opts ...grpc.CallOption) (*UserTheaterResponse, error)
	CreateTheater(ctx context.Context, in *CreateTheaterRequest, opts ...grpc.CallOption) (*Response, error)
	RemoveTheater(ctx context.Context, in *TheaterAuthRequest, opts ...grpc.CallOption) (*Response, error)
	EditTheater(ctx context.Context, in *TheaterAuthRequest, opts ...grpc.CallOption) (*Response, error)
	GetSubtitles(ctx context.Context, in *TheaterAuthRequest, opts ...grpc.CallOption) (*TheaterSubtitlesResponse, error)
	RemoveSubtitle(ctx context.Context, in *RemoveSubtitleRequest, opts ...grpc.CallOption) (*Response, error)
}

type theaterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTheaterServiceClient(cc grpc.ClientConnInterface) TheaterServiceClient {
	return &theaterServiceClient{cc}
}

func (c *theaterServiceClient) Invite(ctx context.Context, in *InviteFriendsTheaterRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/Invite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *theaterServiceClient) GetUserTheaters(ctx context.Context, in *GetAllUserTheatersRequest, opts ...grpc.CallOption) (*UserTheatersResponse, error) {
	out := new(UserTheatersResponse)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/GetUserTheaters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *theaterServiceClient) GetUserSharedTheaters(ctx context.Context, in *GetAllUserTheatersRequest, opts ...grpc.CallOption) (*UserTheatersResponse, error) {
	out := new(UserTheatersResponse)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/GetUserSharedTheaters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *theaterServiceClient) GetTheater(ctx context.Context, in *Theater, opts ...grpc.CallOption) (*UserTheaterResponse, error) {
	out := new(UserTheaterResponse)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/GetTheater", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *theaterServiceClient) CreateTheater(ctx context.Context, in *CreateTheaterRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/CreateTheater", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *theaterServiceClient) RemoveTheater(ctx context.Context, in *TheaterAuthRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/RemoveTheater", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *theaterServiceClient) EditTheater(ctx context.Context, in *TheaterAuthRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/EditTheater", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *theaterServiceClient) GetSubtitles(ctx context.Context, in *TheaterAuthRequest, opts ...grpc.CallOption) (*TheaterSubtitlesResponse, error) {
	out := new(TheaterSubtitlesResponse)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/GetSubtitles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *theaterServiceClient) RemoveSubtitle(ctx context.Context, in *RemoveSubtitleRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/RemoveSubtitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TheaterServiceServer is the server API for TheaterService service.
type TheaterServiceServer interface {
	Invite(context.Context, *InviteFriendsTheaterRequest) (*Response, error)
	GetUserTheaters(context.Context, *GetAllUserTheatersRequest) (*UserTheatersResponse, error)
	GetUserSharedTheaters(context.Context, *GetAllUserTheatersRequest) (*UserTheatersResponse, error)
	GetTheater(context.Context, *Theater) (*UserTheaterResponse, error)
	CreateTheater(context.Context, *CreateTheaterRequest) (*Response, error)
	RemoveTheater(context.Context, *TheaterAuthRequest) (*Response, error)
	EditTheater(context.Context, *TheaterAuthRequest) (*Response, error)
	GetSubtitles(context.Context, *TheaterAuthRequest) (*TheaterSubtitlesResponse, error)
	RemoveSubtitle(context.Context, *RemoveSubtitleRequest) (*Response, error)
}

// UnimplementedTheaterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTheaterServiceServer struct {
}

func (*UnimplementedTheaterServiceServer) Invite(context.Context, *InviteFriendsTheaterRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Invite not implemented")
}
func (*UnimplementedTheaterServiceServer) GetUserTheaters(context.Context, *GetAllUserTheatersRequest) (*UserTheatersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTheaters not implemented")
}
func (*UnimplementedTheaterServiceServer) GetUserSharedTheaters(context.Context, *GetAllUserTheatersRequest) (*UserTheatersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSharedTheaters not implemented")
}
func (*UnimplementedTheaterServiceServer) GetTheater(context.Context, *Theater) (*UserTheaterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTheater not implemented")
}
func (*UnimplementedTheaterServiceServer) CreateTheater(context.Context, *CreateTheaterRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTheater not implemented")
}
func (*UnimplementedTheaterServiceServer) RemoveTheater(context.Context, *TheaterAuthRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveTheater not implemented")
}
func (*UnimplementedTheaterServiceServer) EditTheater(context.Context, *TheaterAuthRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditTheater not implemented")
}
func (*UnimplementedTheaterServiceServer) GetSubtitles(context.Context, *TheaterAuthRequest) (*TheaterSubtitlesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubtitles not implemented")
}
func (*UnimplementedTheaterServiceServer) RemoveSubtitle(context.Context, *RemoveSubtitleRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSubtitle not implemented")
}

func RegisterTheaterServiceServer(s *grpc.Server, srv TheaterServiceServer) {
	s.RegisterService(&_TheaterService_serviceDesc, srv)
}

func _TheaterService_Invite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InviteFriendsTheaterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).Invite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/Invite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).Invite(ctx, req.(*InviteFriendsTheaterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TheaterService_GetUserTheaters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllUserTheatersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).GetUserTheaters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/GetUserTheaters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).GetUserTheaters(ctx, req.(*GetAllUserTheatersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TheaterService_GetUserSharedTheaters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllUserTheatersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).GetUserSharedTheaters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/GetUserSharedTheaters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).GetUserSharedTheaters(ctx, req.(*GetAllUserTheatersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TheaterService_GetTheater_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Theater)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).GetTheater(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/GetTheater",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).GetTheater(ctx, req.(*Theater))
	}
	return interceptor(ctx, in, info, handler)
}

func _TheaterService_CreateTheater_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTheaterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).CreateTheater(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/CreateTheater",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).CreateTheater(ctx, req.(*CreateTheaterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TheaterService_RemoveTheater_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TheaterAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).RemoveTheater(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/RemoveTheater",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).RemoveTheater(ctx, req.(*TheaterAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TheaterService_EditTheater_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TheaterAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).EditTheater(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/EditTheater",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).EditTheater(ctx, req.(*TheaterAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TheaterService_GetSubtitles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TheaterAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).GetSubtitles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/GetSubtitles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).GetSubtitles(ctx, req.(*TheaterAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TheaterService_RemoveSubtitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveSubtitleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).RemoveSubtitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/RemoveSubtitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).RemoveSubtitle(ctx, req.(*RemoveSubtitleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TheaterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TheaterService",
	HandlerType: (*TheaterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Invite",
			Handler:    _TheaterService_Invite_Handler,
		},
		{
			MethodName: "GetUserTheaters",
			Handler:    _TheaterService_GetUserTheaters_Handler,
		},
		{
			MethodName: "GetUserSharedTheaters",
			Handler:    _TheaterService_GetUserSharedTheaters_Handler,
		},
		{
			MethodName: "GetTheater",
			Handler:    _TheaterService_GetTheater_Handler,
		},
		{
			MethodName: "CreateTheater",
			Handler:    _TheaterService_CreateTheater_Handler,
		},
		{
			MethodName: "RemoveTheater",
			Handler:    _TheaterService_RemoveTheater_Handler,
		},
		{
			MethodName: "EditTheater",
			Handler:    _TheaterService_EditTheater_Handler,
		},
		{
			MethodName: "GetSubtitles",
			Handler:    _TheaterService_GetSubtitles_Handler,
		},
		{
			MethodName: "RemoveSubtitle",
			Handler:    _TheaterService_RemoveSubtitle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc.theater.proto",
}
