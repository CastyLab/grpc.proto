// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: grpc.theater.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PRIVACY int32

const (
	PRIVACY_PRIVATE  PRIVACY = 0
	PRIVACY_EVERYONE PRIVACY = 1
	PRIVACY_PUBLIC   PRIVACY = 2
)

// Enum value maps for PRIVACY.
var (
	PRIVACY_name = map[int32]string{
		0: "PRIVATE",
		1: "EVERYONE",
		2: "PUBLIC",
	}
	PRIVACY_value = map[string]int32{
		"PRIVATE":  0,
		"EVERYONE": 1,
		"PUBLIC":   2,
	}
)

func (x PRIVACY) Enum() *PRIVACY {
	p := new(PRIVACY)
	*p = x
	return p
}

func (x PRIVACY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PRIVACY) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_theater_proto_enumTypes[0].Descriptor()
}

func (PRIVACY) Type() protoreflect.EnumType {
	return &file_grpc_theater_proto_enumTypes[0]
}

func (x PRIVACY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PRIVACY.Descriptor instead.
func (PRIVACY) EnumDescriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{0}
}

type VIDEO_PLAYER_ACCESS int32

const (
	VIDEO_PLAYER_ACCESS_ACCESS_BY_USER     VIDEO_PLAYER_ACCESS = 0
	VIDEO_PLAYER_ACCESS_ACCESS_BY_EVERYONE VIDEO_PLAYER_ACCESS = 1
	VIDEO_PLAYER_ACCESS_ACCESS_BY_FRIENDS  VIDEO_PLAYER_ACCESS = 2
	VIDEO_PLAYER_ACCESS_ACCESS_BY_ROLES    VIDEO_PLAYER_ACCESS = 3
)

// Enum value maps for VIDEO_PLAYER_ACCESS.
var (
	VIDEO_PLAYER_ACCESS_name = map[int32]string{
		0: "ACCESS_BY_USER",
		1: "ACCESS_BY_EVERYONE",
		2: "ACCESS_BY_FRIENDS",
		3: "ACCESS_BY_ROLES",
	}
	VIDEO_PLAYER_ACCESS_value = map[string]int32{
		"ACCESS_BY_USER":     0,
		"ACCESS_BY_EVERYONE": 1,
		"ACCESS_BY_FRIENDS":  2,
		"ACCESS_BY_ROLES":    3,
	}
)

func (x VIDEO_PLAYER_ACCESS) Enum() *VIDEO_PLAYER_ACCESS {
	p := new(VIDEO_PLAYER_ACCESS)
	*p = x
	return p
}

func (x VIDEO_PLAYER_ACCESS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VIDEO_PLAYER_ACCESS) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_theater_proto_enumTypes[1].Descriptor()
}

func (VIDEO_PLAYER_ACCESS) Type() protoreflect.EnumType {
	return &file_grpc_theater_proto_enumTypes[1]
}

func (x VIDEO_PLAYER_ACCESS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VIDEO_PLAYER_ACCESS.Descriptor instead.
func (VIDEO_PLAYER_ACCESS) EnumDescriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{1}
}

type MediaSource_Type int32

const (
	MediaSource_UNKNOWN      MediaSource_Type = 0
	MediaSource_YOUTUBE      MediaSource_Type = 1
	MediaSource_TORRENT      MediaSource_Type = 2
	MediaSource_SOUND_CLOUD  MediaSource_Type = 3
	MediaSource_DOWNLOAD_URI MediaSource_Type = 4
	MediaSource_LOCAL_PATH   MediaSource_Type = 5
)

// Enum value maps for MediaSource_Type.
var (
	MediaSource_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "YOUTUBE",
		2: "TORRENT",
		3: "SOUND_CLOUD",
		4: "DOWNLOAD_URI",
		5: "LOCAL_PATH",
	}
	MediaSource_Type_value = map[string]int32{
		"UNKNOWN":      0,
		"YOUTUBE":      1,
		"TORRENT":      2,
		"SOUND_CLOUD":  3,
		"DOWNLOAD_URI": 4,
		"LOCAL_PATH":   5,
	}
)

func (x MediaSource_Type) Enum() *MediaSource_Type {
	p := new(MediaSource_Type)
	*p = x
	return p
}

func (x MediaSource_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaSource_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_theater_proto_enumTypes[2].Descriptor()
}

func (MediaSource_Type) Type() protoreflect.EnumType {
	return &file_grpc_theater_proto_enumTypes[2]
}

func (x MediaSource_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaSource_Type.Descriptor instead.
func (MediaSource_Type) EnumDescriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{3, 0}
}

type TheaterRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TheaterId string `protobuf:"bytes,2,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
	Title     string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *TheaterRole) Reset() {
	*x = TheaterRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TheaterRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TheaterRole) ProtoMessage() {}

func (x *TheaterRole) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TheaterRole.ProtoReflect.Descriptor instead.
func (*TheaterRole) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{0}
}

func (x *TheaterRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TheaterRole) GetTheaterId() string {
	if x != nil {
		return x.TheaterId
	}
	return ""
}

func (x *TheaterRole) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type VideoPlayerAccessByRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*TheaterRole `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *VideoPlayerAccessByRoles) Reset() {
	*x = VideoPlayerAccessByRoles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPlayerAccessByRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPlayerAccessByRoles) ProtoMessage() {}

func (x *VideoPlayerAccessByRoles) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPlayerAccessByRoles.ProtoReflect.Descriptor instead.
func (*VideoPlayerAccessByRoles) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{1}
}

func (x *VideoPlayerAccessByRoles) GetRoles() []*TheaterRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

type Subtitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MediaSourceId string               `protobuf:"bytes,2,opt,name=media_source_id,json=mediaSourceId,proto3" json:"media_source_id,omitempty"`
	Lang          string               `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	File          string               `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Subtitle) Reset() {
	*x = Subtitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subtitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subtitle) ProtoMessage() {}

func (x *Subtitle) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subtitle.ProtoReflect.Descriptor instead.
func (*Subtitle) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{2}
}

func (x *Subtitle) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Subtitle) GetMediaSourceId() string {
	if x != nil {
		return x.MediaSourceId
	}
	return ""
}

func (x *Subtitle) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Subtitle) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *Subtitle) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Subtitle) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type MediaSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type           MediaSource_Type     `protobuf:"varint,2,opt,name=type,proto3,enum=proto.MediaSource_Type" json:"type,omitempty"`
	Banner         string               `protobuf:"bytes,3,opt,name=banner,proto3" json:"banner,omitempty"`
	Uri            string               `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	LastPlayedTime int64                `protobuf:"varint,5,opt,name=last_played_time,json=lastPlayedTime,proto3" json:"last_played_time,omitempty"`
	Subtitles      []*Subtitle          `protobuf:"bytes,6,rep,name=subtitles,proto3" json:"subtitles,omitempty"`
	UserId         string               `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt      *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *MediaSource) Reset() {
	*x = MediaSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaSource) ProtoMessage() {}

func (x *MediaSource) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaSource.ProtoReflect.Descriptor instead.
func (*MediaSource) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{3}
}

func (x *MediaSource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MediaSource) GetType() MediaSource_Type {
	if x != nil {
		return x.Type
	}
	return MediaSource_UNKNOWN
}

func (x *MediaSource) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *MediaSource) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MediaSource) GetLastPlayedTime() int64 {
	if x != nil {
		return x.LastPlayedTime
	}
	return 0
}

func (x *MediaSource) GetSubtitles() []*Subtitle {
	if x != nil {
		return x.Subtitles
	}
	return nil
}

func (x *MediaSource) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MediaSource) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MediaSource) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Theater struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title             string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Privacy           PRIVACY              `protobuf:"varint,4,opt,name=privacy,proto3,enum=proto.PRIVACY" json:"privacy,omitempty"`
	VideoPlayerAccess VIDEO_PLAYER_ACCESS  `protobuf:"varint,5,opt,name=video_player_access,json=videoPlayerAccess,proto3,enum=proto.VIDEO_PLAYER_ACCESS" json:"video_player_access,omitempty"`
	UserId            string               `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	User              *User                `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`
	MediaSource       *MediaSource         `protobuf:"bytes,8,opt,name=media_source,json=mediaSource,proto3" json:"media_source,omitempty"`
	CreatedAt         *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamp.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Theater) Reset() {
	*x = Theater{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Theater) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Theater) ProtoMessage() {}

func (x *Theater) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Theater.ProtoReflect.Descriptor instead.
func (*Theater) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{4}
}

func (x *Theater) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Theater) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Theater) GetPrivacy() PRIVACY {
	if x != nil {
		return x.Privacy
	}
	return PRIVACY_PRIVATE
}

func (x *Theater) GetVideoPlayerAccess() VIDEO_PLAYER_ACCESS {
	if x != nil {
		return x.VideoPlayerAccess
	}
	return VIDEO_PLAYER_ACCESS_ACCESS_BY_USER
}

func (x *Theater) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Theater) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Theater) GetMediaSource() *MediaSource {
	if x != nil {
		return x.MediaSource
	}
	return nil
}

func (x *Theater) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Theater) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type TheaterAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theater     *Theater             `protobuf:"bytes,1,opt,name=theater,proto3" json:"theater,omitempty"`
	AuthRequest *AuthenticateRequest `protobuf:"bytes,2,opt,name=auth_request,json=authRequest,proto3" json:"auth_request,omitempty"`
}

func (x *TheaterAuthRequest) Reset() {
	*x = TheaterAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TheaterAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TheaterAuthRequest) ProtoMessage() {}

func (x *TheaterAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TheaterAuthRequest.ProtoReflect.Descriptor instead.
func (*TheaterAuthRequest) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{5}
}

func (x *TheaterAuthRequest) GetTheater() *Theater {
	if x != nil {
		return x.Theater
	}
	return nil
}

func (x *TheaterAuthRequest) GetAuthRequest() *AuthenticateRequest {
	if x != nil {
		return x.AuthRequest
	}
	return nil
}

type RemoveSubtitleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthRequest   *AuthenticateRequest `protobuf:"bytes,1,opt,name=auth_request,json=authRequest,proto3" json:"auth_request,omitempty"`
	SubtitleId    string               `protobuf:"bytes,2,opt,name=subtitle_id,json=subtitleId,proto3" json:"subtitle_id,omitempty"`
	MediaSourceId string               `protobuf:"bytes,3,opt,name=media_source_id,json=mediaSourceId,proto3" json:"media_source_id,omitempty"`
}

func (x *RemoveSubtitleRequest) Reset() {
	*x = RemoveSubtitleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSubtitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSubtitleRequest) ProtoMessage() {}

func (x *RemoveSubtitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSubtitleRequest.ProtoReflect.Descriptor instead.
func (*RemoveSubtitleRequest) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveSubtitleRequest) GetAuthRequest() *AuthenticateRequest {
	if x != nil {
		return x.AuthRequest
	}
	return nil
}

func (x *RemoveSubtitleRequest) GetSubtitleId() string {
	if x != nil {
		return x.SubtitleId
	}
	return ""
}

func (x *RemoveSubtitleRequest) GetMediaSourceId() string {
	if x != nil {
		return x.MediaSourceId
	}
	return ""
}

type TheaterSubtitlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Status  string      `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Result  []*Subtitle `protobuf:"bytes,4,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *TheaterSubtitlesResponse) Reset() {
	*x = TheaterSubtitlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TheaterSubtitlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TheaterSubtitlesResponse) ProtoMessage() {}

func (x *TheaterSubtitlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TheaterSubtitlesResponse.ProtoReflect.Descriptor instead.
func (*TheaterSubtitlesResponse) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{7}
}

func (x *TheaterSubtitlesResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TheaterSubtitlesResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TheaterSubtitlesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TheaterSubtitlesResponse) GetResult() []*Subtitle {
	if x != nil {
		return x.Result
	}
	return nil
}

type UserTheaterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Status  string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Result  *Theater `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UserTheaterResponse) Reset() {
	*x = UserTheaterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTheaterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTheaterResponse) ProtoMessage() {}

func (x *UserTheaterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTheaterResponse.ProtoReflect.Descriptor instead.
func (*UserTheaterResponse) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{8}
}

func (x *UserTheaterResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserTheaterResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserTheaterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserTheaterResponse) GetResult() *Theater {
	if x != nil {
		return x.Result
	}
	return nil
}

type InviteFriendsTheaterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthRequest *AuthenticateRequest `protobuf:"bytes,1,opt,name=auth_request,json=authRequest,proto3" json:"auth_request,omitempty"`
	TheaterId   string               `protobuf:"bytes,2,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
	FriendIds   []string             `protobuf:"bytes,3,rep,name=friend_ids,json=friendIds,proto3" json:"friend_ids,omitempty"`
}

func (x *InviteFriendsTheaterRequest) Reset() {
	*x = InviteFriendsTheaterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteFriendsTheaterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteFriendsTheaterRequest) ProtoMessage() {}

func (x *InviteFriendsTheaterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteFriendsTheaterRequest.ProtoReflect.Descriptor instead.
func (*InviteFriendsTheaterRequest) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{9}
}

func (x *InviteFriendsTheaterRequest) GetAuthRequest() *AuthenticateRequest {
	if x != nil {
		return x.AuthRequest
	}
	return nil
}

func (x *InviteFriendsTheaterRequest) GetTheaterId() string {
	if x != nil {
		return x.TheaterId
	}
	return ""
}

func (x *InviteFriendsTheaterRequest) GetFriendIds() []string {
	if x != nil {
		return x.FriendIds
	}
	return nil
}

// Start of MediaSource requests and responses
type MediaSourceAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthRequest   *AuthenticateRequest `protobuf:"bytes,1,opt,name=auth_request,json=authRequest,proto3" json:"auth_request,omitempty"`
	MediaSourceId *MediaSource         `protobuf:"bytes,2,opt,name=media_source_id,json=mediaSourceId,proto3" json:"media_source_id,omitempty"`
	Limit         uint64               `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page          uint64               `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PerPage       uint64               `protobuf:"varint,5,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
}

func (x *MediaSourceAuthRequest) Reset() {
	*x = MediaSourceAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaSourceAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaSourceAuthRequest) ProtoMessage() {}

func (x *MediaSourceAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaSourceAuthRequest.ProtoReflect.Descriptor instead.
func (*MediaSourceAuthRequest) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{10}
}

func (x *MediaSourceAuthRequest) GetAuthRequest() *AuthenticateRequest {
	if x != nil {
		return x.AuthRequest
	}
	return nil
}

func (x *MediaSourceAuthRequest) GetMediaSourceId() *MediaSource {
	if x != nil {
		return x.MediaSourceId
	}
	return nil
}

func (x *MediaSourceAuthRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MediaSourceAuthRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MediaSourceAuthRequest) GetPerPage() uint64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type MediaSourceRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthRequest   *AuthenticateRequest `protobuf:"bytes,1,opt,name=auth_request,json=authRequest,proto3" json:"auth_request,omitempty"`
	MediaSourceId string               `protobuf:"bytes,2,opt,name=media_source_id,json=mediaSourceId,proto3" json:"media_source_id,omitempty"`
}

func (x *MediaSourceRemoveRequest) Reset() {
	*x = MediaSourceRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaSourceRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaSourceRemoveRequest) ProtoMessage() {}

func (x *MediaSourceRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaSourceRemoveRequest.ProtoReflect.Descriptor instead.
func (*MediaSourceRemoveRequest) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{11}
}

func (x *MediaSourceRemoveRequest) GetAuthRequest() *AuthenticateRequest {
	if x != nil {
		return x.AuthRequest
	}
	return nil
}

func (x *MediaSourceRemoveRequest) GetMediaSourceId() string {
	if x != nil {
		return x.MediaSourceId
	}
	return ""
}

type TheaterMediaSourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Status  string         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Result  []*MediaSource `protobuf:"bytes,4,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *TheaterMediaSourcesResponse) Reset() {
	*x = TheaterMediaSourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TheaterMediaSourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TheaterMediaSourcesResponse) ProtoMessage() {}

func (x *TheaterMediaSourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TheaterMediaSourcesResponse.ProtoReflect.Descriptor instead.
func (*TheaterMediaSourcesResponse) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{12}
}

func (x *TheaterMediaSourcesResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TheaterMediaSourcesResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TheaterMediaSourcesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TheaterMediaSourcesResponse) GetResult() []*MediaSource {
	if x != nil {
		return x.Result
	}
	return nil
}

type MediaSource_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Length uint64 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	Size   uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Title  string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *MediaSource_File) Reset() {
	*x = MediaSource_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_theater_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaSource_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaSource_File) ProtoMessage() {}

func (x *MediaSource_File) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_theater_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaSource_File.ProtoReflect.Descriptor instead.
func (*MediaSource_File) Descriptor() ([]byte, []int) {
	return file_grpc_theater_proto_rawDescGZIP(), []int{3, 0}
}

func (x *MediaSource_File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MediaSource_File) GetLength() uint64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *MediaSource_File) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MediaSource_File) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

var File_grpc_theater_proto protoreflect.FileDescriptor

var file_grpc_theater_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52,
	0x0a, 0x0b, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0x44, 0x0a, 0x18, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x28,
	0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x08, 0x53, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x98, 0x04, 0x0a, 0x0b,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x09,
	0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x58, 0x0a, 0x04, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0x60, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x59, 0x4f, 0x55,
	0x54, 0x55, 0x42, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x4f, 0x52, 0x52, 0x45, 0x4e,
	0x54, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x43, 0x4c, 0x4f,
	0x55, 0x44, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44,
	0x5f, 0x55, 0x52, 0x49, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f,
	0x50, 0x41, 0x54, 0x48, 0x10, 0x05, 0x22, 0x8c, 0x03, 0x0a, 0x07, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x52, 0x49, 0x56, 0x41, 0x43, 0x59, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x12, 0x4a, 0x0a, 0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x52, 0x11, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0c, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x7d, 0x0a, 0x12, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x74,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x07, 0x74, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d,
	0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x18, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x1b, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x64, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x16, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3a, 0x0a, 0x0f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0d, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x22, 0x81, 0x01, 0x0a, 0x18, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a,
	0x0c, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0b, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x1b, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x30, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x43,
	0x59, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x45, 0x56, 0x45, 0x52, 0x59, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x02, 0x2a, 0x6d, 0x0a, 0x13, 0x56, 0x49, 0x44, 0x45,
	0x4f, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x12,
	0x12, 0x0a, 0x0e, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x42, 0x59, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x42, 0x59,
	0x5f, 0x45, 0x56, 0x45, 0x52, 0x59, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x41,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x42, 0x59, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x53,
	0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x42, 0x59, 0x5f,
	0x52, 0x4f, 0x4c, 0x45, 0x53, 0x10, 0x03, 0x32, 0xf4, 0x03, 0x0a, 0x0e, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73,
	0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75,
	0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09,
	0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_grpc_theater_proto_rawDescOnce sync.Once
	file_grpc_theater_proto_rawDescData = file_grpc_theater_proto_rawDesc
)

func file_grpc_theater_proto_rawDescGZIP() []byte {
	file_grpc_theater_proto_rawDescOnce.Do(func() {
		file_grpc_theater_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_theater_proto_rawDescData)
	})
	return file_grpc_theater_proto_rawDescData
}

var file_grpc_theater_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_grpc_theater_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_grpc_theater_proto_goTypes = []interface{}{
	(PRIVACY)(0),                        // 0: proto.PRIVACY
	(VIDEO_PLAYER_ACCESS)(0),            // 1: proto.VIDEO_PLAYER_ACCESS
	(MediaSource_Type)(0),               // 2: proto.MediaSource.Type
	(*TheaterRole)(nil),                 // 3: proto.TheaterRole
	(*VideoPlayerAccessByRoles)(nil),    // 4: proto.VideoPlayerAccessByRoles
	(*Subtitle)(nil),                    // 5: proto.Subtitle
	(*MediaSource)(nil),                 // 6: proto.MediaSource
	(*Theater)(nil),                     // 7: proto.Theater
	(*TheaterAuthRequest)(nil),          // 8: proto.TheaterAuthRequest
	(*RemoveSubtitleRequest)(nil),       // 9: proto.RemoveSubtitleRequest
	(*TheaterSubtitlesResponse)(nil),    // 10: proto.TheaterSubtitlesResponse
	(*UserTheaterResponse)(nil),         // 11: proto.UserTheaterResponse
	(*InviteFriendsTheaterRequest)(nil), // 12: proto.InviteFriendsTheaterRequest
	(*MediaSourceAuthRequest)(nil),      // 13: proto.MediaSourceAuthRequest
	(*MediaSourceRemoveRequest)(nil),    // 14: proto.MediaSourceRemoveRequest
	(*TheaterMediaSourcesResponse)(nil), // 15: proto.TheaterMediaSourcesResponse
	(*MediaSource_File)(nil),            // 16: proto.MediaSource.File
	(*timestamp.Timestamp)(nil),         // 17: google.protobuf.Timestamp
	(*User)(nil),                        // 18: proto.User
	(*AuthenticateRequest)(nil),         // 19: proto.AuthenticateRequest
	(*Response)(nil),                    // 20: proto.Response
}
var file_grpc_theater_proto_depIdxs = []int32{
	3,  // 0: proto.VideoPlayerAccessByRoles.roles:type_name -> proto.TheaterRole
	17, // 1: proto.Subtitle.created_at:type_name -> google.protobuf.Timestamp
	17, // 2: proto.Subtitle.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 3: proto.MediaSource.type:type_name -> proto.MediaSource.Type
	5,  // 4: proto.MediaSource.subtitles:type_name -> proto.Subtitle
	17, // 5: proto.MediaSource.created_at:type_name -> google.protobuf.Timestamp
	17, // 6: proto.MediaSource.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 7: proto.Theater.privacy:type_name -> proto.PRIVACY
	1,  // 8: proto.Theater.video_player_access:type_name -> proto.VIDEO_PLAYER_ACCESS
	18, // 9: proto.Theater.user:type_name -> proto.User
	6,  // 10: proto.Theater.media_source:type_name -> proto.MediaSource
	17, // 11: proto.Theater.created_at:type_name -> google.protobuf.Timestamp
	17, // 12: proto.Theater.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 13: proto.TheaterAuthRequest.theater:type_name -> proto.Theater
	19, // 14: proto.TheaterAuthRequest.auth_request:type_name -> proto.AuthenticateRequest
	19, // 15: proto.RemoveSubtitleRequest.auth_request:type_name -> proto.AuthenticateRequest
	5,  // 16: proto.TheaterSubtitlesResponse.result:type_name -> proto.Subtitle
	7,  // 17: proto.UserTheaterResponse.result:type_name -> proto.Theater
	19, // 18: proto.InviteFriendsTheaterRequest.auth_request:type_name -> proto.AuthenticateRequest
	19, // 19: proto.MediaSourceAuthRequest.auth_request:type_name -> proto.AuthenticateRequest
	6,  // 20: proto.MediaSourceAuthRequest.media_source_id:type_name -> proto.MediaSource
	19, // 21: proto.MediaSourceRemoveRequest.auth_request:type_name -> proto.AuthenticateRequest
	6,  // 22: proto.TheaterMediaSourcesResponse.result:type_name -> proto.MediaSource
	12, // 23: proto.TheaterService.Invite:input_type -> proto.InviteFriendsTheaterRequest
	7,  // 24: proto.TheaterService.GetTheater:input_type -> proto.Theater
	8,  // 25: proto.TheaterService.UpdateTheater:input_type -> proto.TheaterAuthRequest
	13, // 26: proto.TheaterService.GetSubtitles:input_type -> proto.MediaSourceAuthRequest
	13, // 27: proto.TheaterService.GetMediaSources:input_type -> proto.MediaSourceAuthRequest
	14, // 28: proto.TheaterService.RemoveMediaSource:input_type -> proto.MediaSourceRemoveRequest
	9,  // 29: proto.TheaterService.RemoveSubtitle:input_type -> proto.RemoveSubtitleRequest
	20, // 30: proto.TheaterService.Invite:output_type -> proto.Response
	11, // 31: proto.TheaterService.GetTheater:output_type -> proto.UserTheaterResponse
	20, // 32: proto.TheaterService.UpdateTheater:output_type -> proto.Response
	10, // 33: proto.TheaterService.GetSubtitles:output_type -> proto.TheaterSubtitlesResponse
	15, // 34: proto.TheaterService.GetMediaSources:output_type -> proto.TheaterMediaSourcesResponse
	20, // 35: proto.TheaterService.RemoveMediaSource:output_type -> proto.Response
	20, // 36: proto.TheaterService.RemoveSubtitle:output_type -> proto.Response
	30, // [30:37] is the sub-list for method output_type
	23, // [23:30] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_grpc_theater_proto_init() }
func file_grpc_theater_proto_init() {
	if File_grpc_theater_proto != nil {
		return
	}
	file_grpc_base_proto_init()
	file_grpc_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_grpc_theater_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TheaterRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPlayerAccessByRoles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subtitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Theater); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TheaterAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSubtitleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TheaterSubtitlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTheaterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteFriendsTheaterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaSourceAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaSourceRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TheaterMediaSourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_theater_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaSource_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_theater_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_theater_proto_goTypes,
		DependencyIndexes: file_grpc_theater_proto_depIdxs,
		EnumInfos:         file_grpc_theater_proto_enumTypes,
		MessageInfos:      file_grpc_theater_proto_msgTypes,
	}.Build()
	File_grpc_theater_proto = out.File
	file_grpc_theater_proto_rawDesc = nil
	file_grpc_theater_proto_goTypes = nil
	file_grpc_theater_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TheaterServiceClient is the client API for TheaterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TheaterServiceClient interface {
	Invite(ctx context.Context, in *InviteFriendsTheaterRequest, opts ...grpc.CallOption) (*Response, error)
	GetTheater(ctx context.Context, in *Theater, opts ...grpc.CallOption) (*UserTheaterResponse, error)
	UpdateTheater(ctx context.Context, in *TheaterAuthRequest, opts ...grpc.CallOption) (*Response, error)
	GetSubtitles(ctx context.Context, in *MediaSourceAuthRequest, opts ...grpc.CallOption) (*TheaterSubtitlesResponse, error)
	GetMediaSources(ctx context.Context, in *MediaSourceAuthRequest, opts ...grpc.CallOption) (*TheaterMediaSourcesResponse, error)
	RemoveMediaSource(ctx context.Context, in *MediaSourceRemoveRequest, opts ...grpc.CallOption) (*Response, error)
	RemoveSubtitle(ctx context.Context, in *RemoveSubtitleRequest, opts ...grpc.CallOption) (*Response, error)
}

type theaterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTheaterServiceClient(cc grpc.ClientConnInterface) TheaterServiceClient {
	return &theaterServiceClient{cc}
}

func (c *theaterServiceClient) Invite(ctx context.Context, in *InviteFriendsTheaterRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/Invite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *theaterServiceClient) GetTheater(ctx context.Context, in *Theater, opts ...grpc.CallOption) (*UserTheaterResponse, error) {
	out := new(UserTheaterResponse)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/GetTheater", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *theaterServiceClient) UpdateTheater(ctx context.Context, in *TheaterAuthRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/UpdateTheater", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *theaterServiceClient) GetSubtitles(ctx context.Context, in *MediaSourceAuthRequest, opts ...grpc.CallOption) (*TheaterSubtitlesResponse, error) {
	out := new(TheaterSubtitlesResponse)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/GetSubtitles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *theaterServiceClient) GetMediaSources(ctx context.Context, in *MediaSourceAuthRequest, opts ...grpc.CallOption) (*TheaterMediaSourcesResponse, error) {
	out := new(TheaterMediaSourcesResponse)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/GetMediaSources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *theaterServiceClient) RemoveMediaSource(ctx context.Context, in *MediaSourceRemoveRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/RemoveMediaSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *theaterServiceClient) RemoveSubtitle(ctx context.Context, in *RemoveSubtitleRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.TheaterService/RemoveSubtitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TheaterServiceServer is the server API for TheaterService service.
type TheaterServiceServer interface {
	Invite(context.Context, *InviteFriendsTheaterRequest) (*Response, error)
	GetTheater(context.Context, *Theater) (*UserTheaterResponse, error)
	UpdateTheater(context.Context, *TheaterAuthRequest) (*Response, error)
	GetSubtitles(context.Context, *MediaSourceAuthRequest) (*TheaterSubtitlesResponse, error)
	GetMediaSources(context.Context, *MediaSourceAuthRequest) (*TheaterMediaSourcesResponse, error)
	RemoveMediaSource(context.Context, *MediaSourceRemoveRequest) (*Response, error)
	RemoveSubtitle(context.Context, *RemoveSubtitleRequest) (*Response, error)
}

// UnimplementedTheaterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTheaterServiceServer struct {
}

func (*UnimplementedTheaterServiceServer) Invite(context.Context, *InviteFriendsTheaterRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Invite not implemented")
}
func (*UnimplementedTheaterServiceServer) GetTheater(context.Context, *Theater) (*UserTheaterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTheater not implemented")
}
func (*UnimplementedTheaterServiceServer) UpdateTheater(context.Context, *TheaterAuthRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTheater not implemented")
}
func (*UnimplementedTheaterServiceServer) GetSubtitles(context.Context, *MediaSourceAuthRequest) (*TheaterSubtitlesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubtitles not implemented")
}
func (*UnimplementedTheaterServiceServer) GetMediaSources(context.Context, *MediaSourceAuthRequest) (*TheaterMediaSourcesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMediaSources not implemented")
}
func (*UnimplementedTheaterServiceServer) RemoveMediaSource(context.Context, *MediaSourceRemoveRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveMediaSource not implemented")
}
func (*UnimplementedTheaterServiceServer) RemoveSubtitle(context.Context, *RemoveSubtitleRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSubtitle not implemented")
}

func RegisterTheaterServiceServer(s *grpc.Server, srv TheaterServiceServer) {
	s.RegisterService(&_TheaterService_serviceDesc, srv)
}

func _TheaterService_Invite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InviteFriendsTheaterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).Invite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/Invite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).Invite(ctx, req.(*InviteFriendsTheaterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TheaterService_GetTheater_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Theater)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).GetTheater(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/GetTheater",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).GetTheater(ctx, req.(*Theater))
	}
	return interceptor(ctx, in, info, handler)
}

func _TheaterService_UpdateTheater_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TheaterAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).UpdateTheater(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/UpdateTheater",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).UpdateTheater(ctx, req.(*TheaterAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TheaterService_GetSubtitles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MediaSourceAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).GetSubtitles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/GetSubtitles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).GetSubtitles(ctx, req.(*MediaSourceAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TheaterService_GetMediaSources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MediaSourceAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).GetMediaSources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/GetMediaSources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).GetMediaSources(ctx, req.(*MediaSourceAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TheaterService_RemoveMediaSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MediaSourceRemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).RemoveMediaSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/RemoveMediaSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).RemoveMediaSource(ctx, req.(*MediaSourceRemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TheaterService_RemoveSubtitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveSubtitleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheaterServiceServer).RemoveSubtitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TheaterService/RemoveSubtitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheaterServiceServer).RemoveSubtitle(ctx, req.(*RemoveSubtitleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TheaterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TheaterService",
	HandlerType: (*TheaterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Invite",
			Handler:    _TheaterService_Invite_Handler,
		},
		{
			MethodName: "GetTheater",
			Handler:    _TheaterService_GetTheater_Handler,
		},
		{
			MethodName: "UpdateTheater",
			Handler:    _TheaterService_UpdateTheater_Handler,
		},
		{
			MethodName: "GetSubtitles",
			Handler:    _TheaterService_GetSubtitles_Handler,
		},
		{
			MethodName: "GetMediaSources",
			Handler:    _TheaterService_GetMediaSources_Handler,
		},
		{
			MethodName: "RemoveMediaSource",
			Handler:    _TheaterService_RemoveMediaSource_Handler,
		},
		{
			MethodName: "RemoveSubtitle",
			Handler:    _TheaterService_RemoveSubtitle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc.theater.proto",
}
