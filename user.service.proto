syntax = "proto3";
package proto;

import "base.proto";
import "auth.service.proto";
import "messages/user.proto";
import "messages/friend.proto";
import "messages/notification.proto";

message UpdateStateRequest {
    messages.PERSONAL_STATE state    = 1;
    AuthenticateRequest auth_request = 2;
}

message UpdateActivityRequest {
    messages.Activity   activity     = 1;
    AuthenticateRequest auth_request = 2;
}

message FriendRequest {
    string              request_id   = 1;
    string              friend_id    = 2;
    AuthenticateRequest auth_request = 3;
}

message CreateUserRequest {
    messages.User user = 1;
}

message GetFriendRequest {
    messages.User user = 1;
}

message GetUserResponse {
    int64    code        = 1;
    string   status      = 2;
    string   message     = 3;
    messages.User result = 4;
}

message FriendsResponse {
    int64    code    = 1;
    string   status  = 2;
    string   message = 3;
    repeated messages.User result = 4;
}

message FriendResponse {
    int64         code    = 1;
    string        status  = 2;
    string        message = 3;
    messages.User result  = 4;
}

message CreateNotificationRequest {
    messages.Notification notification = 1;
    AuthenticateRequest   auth_request = 2;
}

message NotificationResponse {
    int64         code          = 1;
    string        status        = 2;
    string        message       = 3;
    int64         unread_count  = 4;
    repeated      messages.Notification result  = 5;
}

message SearchUserRequest {
    string keyword = 1;
    AuthenticateRequest auth_request = 2;
}

message SearchUserResponse {
    int64         code    = 1;
    string        status  = 2;
    string        message = 3;
    repeated messages.User result  = 4;
}

message UpdateUserRequest {
    AuthenticateRequest auth_request = 1;
    messages.User       result       = 2;
}

service UserService {

    // User Profile
    rpc UpdateState(UpdateStateRequest) returns (Response);
    rpc UpdateActivity(UpdateActivityRequest) returns (Response);
    rpc RemoveActivity(AuthenticateRequest) returns (Response);
    rpc GetUser(AuthenticateRequest) returns (GetUserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (GetUserResponse);
    rpc Search(SearchUserRequest) returns (SearchUserResponse);
    rpc CreateUser(CreateUserRequest) returns (AuthResponse);

    // FriendZone
    rpc GetFriend(FriendRequest) returns (FriendResponse);
    rpc GetFriendRequest(FriendRequest) returns (messages.Friend);
    rpc SendFriendRequest(FriendRequest) returns (Response);
    rpc AcceptFriendRequest(FriendRequest) returns (Response);
    rpc GetFriends(AuthenticateRequest) returns (FriendsResponse);

    // Notifications
    rpc GetNotifications(AuthenticateRequest) returns (NotificationResponse);
    rpc CreateNotification(CreateNotificationRequest) returns (NotificationResponse);
    rpc ReadAllNotifications(AuthenticateRequest) returns (NotificationResponse);

}